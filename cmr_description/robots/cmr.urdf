<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from cmr.urdf.xacro                 | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="cmr" xmlns:xacro="http://ros.org/wiki/xacro">
  <gazebo reference="base_link">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Gazebo/Grey"/>
  </gazebo>
  <gazebo reference="wheel_left_link">
    <gravity>true</gravity>
    <!--  <mu1 value="0.8"/>
    <mu2 value="0.8"/>-->
    <!--<kp  value="10000000.0" />
    <kd  value="1.0" />-->
    <!--<fdir1 value="0 0 1"/>-->
    <self_collide>false</self_collide>
    <material value="Gazebo/Black"/>
  </gazebo>
  <gazebo reference="wheel_right_link">
    <gravity>true</gravity>
    <!--  <mu1 value="0.8"/>
    <mu2 value="0.8"/>-->
    <!--  <kp  value="10000000.0" />
    <kd  value="1.0" />-->
    <!--   <fdir1 value="0 0 0"/>-->
    <self_collide>false</self_collide>
    <material value="Gazebo/Black"/>
  </gazebo>
  <gazebo reference="scanner_front_link">
    <material value="Gazebo/Yellow"/>
    <sensor name="sick_s300_laser_front_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.7</min_angle>
            <max_angle>1.7</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>25.0</max>
          <resolution>0.05</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
          achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
          stddev of 0.01m will put 99.7% of samples within 0.03m of the true
          reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="sick_s300_laser_front">
        <topicName>/base/laser/scan_filtered</topicName>
        <frameName>scanner_front_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!--
  <gazebo>
  <plugin name="mp_500_controller" filename="libgazebo_ros_planar_move.so">
  <commandTopic>cmd_vel</commandTopic>
  <leftFrontJoint>wheel_left_joint</leftFrontJoint>
  <rightFrontJoint>wheel_right_joint</rightFrontJoint>
  <odometryTopic>odom</odometryTopic>
  <odometryFrame>odom</odometryFrame>
  <odometryRate>20.0</odometryRate>
  <robotBaseFrame>base_link</robotBaseFrame>
</plugin>
</gazebo>
-->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="mp_500_controller">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>40</updateRate>
      <publishWheelTF>false</publishWheelTF>
      <rightJoint>wheel_left_joint</rightJoint>
      <!-- Switched left and right because of bug in DiffDrive Plugin-->
      <leftJoint>wheel_right_joint</leftJoint>
      <wheelSeparation>0.5068</wheelSeparation>
      <wheelAcceleration>0</wheelAcceleration>
      <wheelDiameter>0.26</wheelDiameter>
      <wheelTorque>10</wheelTorque>
      <commandTopic>cmd_vel</commandTopic>
      <odometrySource>encoder</odometrySource>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>
  <!-- Publish ground truth-->
  <gazebo>
    <plugin filename="libgazebo_ros_p3d.so" name="ground_truth">
      <frameName>world</frameName>
      <bodyName>base_link</bodyName>
      <topicName>odom_ground_truth</topicName>
      <updateRate>30.0</updateRate>
    </plugin>
  </gazebo>
  <material name="Neobotix/Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="Neobotix/Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="Neobotix/Green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="Neobotix/Grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="Neobotix/Grey2">
    <color rgba="0.9 0.9 0.9 1.0"/>
  </material>
  <material name="Neobotix/Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="Neobotix/White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="Neobotix/Yellow">
    <color rgba="1.0 1.0 0 10"/>
  </material>
  d

	
  <!-- S300 laser properties -->
  <!--++++++++++++++++++++++++++++++base_link++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++body++++++++++++++++++++++++++++-->
  <link name="base_link">
    <inertial>
      <mass value="70"/>
      <!--TODO: Find correct value-->
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <inertia ixx="3.03333333333" ixy="0" ixz="0" iyy="4.07607666667" iyz="0" izz="4.07607666667"/>
    </inertial>
    <visual name="body">
      <origin rpy="0 0 1.57" xyz="0.0 0.0 0.083"/>
      <!-- for STL -->
      <geometry>
        <mesh filename="package://cmr_description/meshes/base.stl" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="Neobotix/Grey"/>
    </visual>
    <collision name="body_collision">
      <origin rpy="0 0 0" xyz="-0.183 0.0 0.234"/>
      <geometry>
        <box size="0.734 0.6 0.4"/>
        <!--cylinder length="0.381" radius="0.2545"/-->
      </geometry>
    </collision>
    <!--    <visual name='box_visual'>
		  <origin xyz="-0.183 0.0 0.234" rpy="0 0 0" />
		  <geometry>
		    <box size="0.734 0.600 0.400"/>
		  </geometry>

		  <material name="Neobotix/Black" />
	      </visual>-->
    <!--+++++++++++++++++++caster_back++++++++++++++++++++++++-->
    <collision name="caster_back_collision">
      <origin rpy="0 0 0" xyz="-0.47 0 0.011 "/>
      <geometry>
        <sphere radius="0.021"/>
      </geometry>
    </collision>
    <!--   <visual name='castor_back_visual'>
         <origin xyz="${casterOffsetX} 0 ${casterRadius} " rpy="0 0 0" />
       <geometry>
         <sphere radius="${casterRadius}"/>
       </geometry>
     </visual>-->
  </link>
  
++++++++wheel_left_link++++++++++++++++++++++++--&gt;
	
  <link name="wheel_left_link" type="wheel">
    <inertial>
      <mass value="5.5"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <inertia ixx="0.0265489583333" ixy="0" ixz="0" iyy="0.0265489583333" iyz="0" izz="0.046475"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <cylinder length="0.085" radius="0.13"/>
      </geometry>
    </collision>
  </link>
  <!--+++++++++++++++++++wheel_left_joint++++++++++++++++++++++++-->
  <joint name="wheel_left_joint" type="revolute">
    <origin rpy="0 1.57 1.57" xyz="0 -0.2534 0.127"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="-1e+16" upper="1e+16" velocity="3.5"/>
    <joint_properties damping="0.0" friction="0.0"/>
    <parent link="base_link"/>
    <child link="wheel_left_link"/>
  </joint>
  <!--+++++++++++++++++++wheel_right_link++++++++++++++++++++++++-->
  <link name="wheel_right_link" type="wheel">
    <inertial>
      <mass value="5.5"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <inertia ixx="0.0265489583333" ixy="0" ixz="0" iyy="0.0265489583333" iyz="0" izz="0.046475"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <cylinder length="0.085" radius="0.13"/>
      </geometry>
    </collision>
  </link>
  <!--+++++++++++++++++++wheel_right_joint++++++++++++++++++++++++-->
  <joint name="wheel_right_joint" type="revolute">
    <origin rpy="0 1.57 1.57" xyz="0 0.2534 0.127"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="-1e+16" upper="1e+16" velocity="3.5"/>
    <joint_properties damping="0.0" friction="0.0"/>
    <parent link="base_link"/>
    <child link="wheel_right_link"/>
  </joint>
  <!--+++++++++++++++++++laserscanner_front_joint++++++++++++++++++++++++-->
  <joint name="scanner_front_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="3.14 0 0" xyz="0.244 0 0.149"/>
    <parent link="base_link"/>
    <child link="scanner_front_link"/>
  </joint>
  <!--+++++++++++++++++++laserscanner_front_link++++++++++++++++++++++++-->
  <link name="scanner_front_link" type="laser">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.154" radius="0.053"/>
      </geometry>
    </collision>
  </link>
  <!--++++++++++++++++++++++++++++++base_link++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++body++++++++++++++++++++++++++++-->
  <link name="skeleton_link">
    <inertial>
      <mass value="11.66"/>
      <!--TODO: Find correct value-->
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <inertia ixx="0.875" ixy="0" ixz="0" iyy="0.8156" iyz="0" izz="0.438"/>
    </inertial>
    <visual name="skeleton">
      <origin rpy="0 0 0" xyz="-0.010475 0.930017 -0.316741"/>
      <!-- for STL -->
      <geometry>
        <mesh filename="package://cmr_description/meshes/skeleton.stl" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="Neobotix/Grey"/>
    </visual>
  </link>
  <joint name="skeleton_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.164701 0.0 0.354429"/>
    <parent link="base_link"/>
    <child link="skeleton_link"/>
  </joint>
  <!--  <collision name='body_collision'>
    <origin xyz="-0.183 0.0 0.234" rpy="0 0 0" />
    <geometry>
    <box size="${chassisLength} ${chassisWidth} ${chassisHeight}"/>-->
  <!--cylinder length="0.381" radius="0.2545"/-->
  <!--	</geometry>
  </collision>

     <visual name='box_visual'>
  <origin xyz="-0.183 0.0 0.234" rpy="0 0 0" />
  <geometry>
  <box size="0.734 0.600 0.400"/>
</geometry>

<material name="Neobotix/Black" />
</visual>-->
  <joint name="velodyne_base_mount_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.0625 0 1.0277"/>
    <parent link="skeleton_link"/>
    <child link="velodyne_base_link"/>
  </joint>
  <link name="velodyne_base_link">
    <inertial>
      <mass value="0.83"/>
      <origin xyz="0 0 0.03585"/>
      <inertia ixx="0.000908059425" ixy="0" ixz="0" iyy="0.000908059425" iyz="0" izz="0.0011049624"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_1.dae"/>
      </geometry>
    </visual>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.03585"/>
      <geometry>
        <cylinder length="0.0717" radius="0.0516"/>
      </geometry>
    </collision>
  </link>
  <joint name="velodyne_base_scan_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0377"/>
    <parent link="velodyne_base_link"/>
    <child link="velodyne"/>
  </joint>
  <link name="velodyne">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
    </inertial>
    <visual>
      <origin xyz="0 0 -0.0377"/>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_scan.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Gazebo requires the velodyne_gazebo_plugins package -->
  <gazebo reference="velodyne">
    <sensor name="velodyne-VLP16" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>440</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265359</min_angle>
            <max_angle>3.14159265359</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.261799387799</min_angle>
            <max_angle> 0.261799387799</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>131.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_laser.so" name="gazebo_ros_laser_controller">
        <topicName>/velodyne_points</topicName>
        <frameName>velodyne</frameName>
        <min_range>0.9</min_range>
        <max_range>130.0</max_range>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Create camera instance -->
  <joint name="cam_top_joint" type="fixed">
    <origin rpy="0 -0.872664625997 0" xyz="-0.02 0 0.55"/>
    <parent link="skeleton_link"/>
    <child link="cam_top_link"/>
  </joint>
  <link name="cam_top_link">
    <inertial>
      <mass value="0.072"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="-0.02 -0.0325 0"/>
      <geometry>
        <!--Dimensions taken from https://click.intel.com/intelr-realsensetm-depth-camera-d435.html-->
        <box size="0.025 0.09 0.025"/>
      </geometry>
      <material name="DarkGrey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.02 -0.0325 0"/>
      <geometry>
        <!--Dimensions taken from https://click.intel.com/intelr-realsensetm-depth-camera-d435.html-->
        <box size="0.025 0.09 0.025"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="cam_top_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="cam_top_link">
    <sensor name="cam_top" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.21125850088</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.3</near>
          <far>9.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="cam_top_camera_controller">
        <cameraName>cam_top</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>cam_top_color_optical_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="cam_front_joint" type="fixed">
    <origin rpy="1.57079632679 -0.174532925199 3.14159265359" xyz="-0.11 0 0.55"/>
    <parent link="skeleton_link"/>
    <child link="cam_front_link"/>
  </joint>
  <link name="cam_front_link">
    <inertial>
      <mass value="0.072"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="-0.02 -0.0325 0"/>
      <geometry>
        <!--Dimensions taken from https://click.intel.com/intelr-realsensetm-depth-camera-d435.html-->
        <box size="0.025 0.09 0.025"/>
      </geometry>
      <material name="DarkGrey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.02 -0.0325 0"/>
      <geometry>
        <!--Dimensions taken from https://click.intel.com/intelr-realsensetm-depth-camera-d435.html-->
        <box size="0.025 0.09 0.025"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="cam_front_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="cam_front_link">
    <sensor name="cam_front" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.21125850088</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.3</near>
          <far>9.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="cam_front_camera_controller">
        <cameraName>cam_front</cameraName>
        <imageTopicName>color/image_raw</imageTopicName>
        <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>cam_front_color_optical_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Inserted by Simon -->
  <link name="mount_cam_top">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://cmr_description/meshes/top_cam_mount.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </visual>
  </link>
  <joint name="cam_top_connector" type="fixed">
    <parent link="base_link"/>
    <child link="mount_cam_top"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <!-- Insert end -->
  <!-- RS200 contains IR images, left here incase this is needed-->
  <!-- Import macro for realsense-RS200 camera-->
  <!--<xacro:include filename="$(find realsense_gazebo_plugin)/urdf/realsense-RS200.macro.xacro"/>
  <xacro:realsense-rs200 name="${cameraTopName}" ros_topic="${cameraTopName}"/>
  <xacro:realsense-rs200 name="${cameraFrontName}" ros_topic="${cameraFrontName}"/>

  <joint name="${cameraTopName}_joint" type="fixed">
    <parent link="skeleton_link"/>
    <child link="${cameraTopName}_link"/>
    <origin rpy="0 ${-50/180*pi} 0" xyz="-0.02 0 0.55"/>
  </joint>

  <joint name="${cameraFrontName}_joint" type="fixed">
    <parent link="skeleton_link"/>
    <child link="${cameraFrontName}_link"/>
    <origin rpy="${pi/2} ${-10/180*pi} ${pi}" xyz="-0.11 0 0.55"/>
  </joint>-->
  <joint name="imu_sensor_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="skeleton_link"/>
    <child link="imu_sensor_link"/>
  </joint>
  <link name="imu_sensor_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
      <material name="DarkGrey"/>
    </visual>
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00000015" ixy="0" ixz="0" iyy="0.00000015" iyz="0" izz="0.00000015"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <!--<robotNamespace></robotNamespace>-->
      <frameId>imu_sensor_link</frameId>
      <updateRate>50.0</updateRate>
      <bodyName>imu_sensor_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>
  <!-- GPS -->
  <!--<xacro:include filename="$(find cmr_description)/urdf/sensors/gps.urdf.xacro" />-->
  <joint name="sonar_fl_joint" type="fixed">
    <origin rpy="0 -0.523598775598 0" xyz="0.20116 0.140 0.29948"/>
    <parent link="skeleton_link"/>
    <child link="sonar_fl_link"/>
  </joint>
  <link name="sonar_fl_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
  </link>
  <gazebo reference="sonar_fl_link">
    <sensor name="sonar_fl" type="ray">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </horizontal>
          <vertical>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.25</min>
          <max>1.5</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_fl_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>base/relayboard_v2/usboard/sensor1</topicName>
        <frameId>sonar_fl_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="sonar_fr_joint" type="fixed">
    <origin rpy="0 -0.523598775598 0" xyz="0.20116 -0.140 0.29948"/>
    <parent link="skeleton_link"/>
    <child link="sonar_fr_link"/>
  </joint>
  <link name="sonar_fr_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
  </link>
  <gazebo reference="sonar_fr_link">
    <sensor name="sonar_fr" type="ray">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </horizontal>
          <vertical>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.25</min>
          <max>1.5</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_fr_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>base/relayboard_v2/usboard/sensor2</topicName>
        <frameId>sonar_fr_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="sonar_bc_joint" type="fixed">
    <origin rpy="3.14159265359 -2.61799387799 0" xyz="-0.51116 0 0.29948"/>
    <parent link="skeleton_link"/>
    <child link="sonar_bc_link"/>
  </joint>
  <link name="sonar_bc_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
  </link>
  <gazebo reference="sonar_bc_link">
    <sensor name="sonar_bc" type="ray">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </horizontal>
          <vertical>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.25</min>
          <max>1.5</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_bc_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>base/relayboard_v2/usboard/sensor4</topicName>
        <frameId>sonar_bc_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="sonar_bl_joint" type="fixed">
    <origin rpy="0 -0.523598775598 -2.12930168743" xyz="-0.454192 -0.122993 0.29948"/>
    <parent link="skeleton_link"/>
    <child link="sonar_bl_link"/>
  </joint>
  <link name="sonar_bl_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
  </link>
  <gazebo reference="sonar_bl_link">
    <sensor name="sonar_bl" type="ray">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </horizontal>
          <vertical>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.25</min>
          <max>1.5</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_bl_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>base/relayboard_v2/usboard/sensor3</topicName>
        <frameId>sonar_bl_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="sonar_br_joint" type="fixed">
    <origin rpy="0 -0.523598775598 2.12930168743" xyz="-0.454192 0.122993 0.29948"/>
    <parent link="skeleton_link"/>
    <child link="sonar_br_link"/>
  </joint>
  <link name="sonar_br_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
  </link>
  <gazebo reference="sonar_br_link">
    <sensor name="sonar_br" type="ray">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </horizontal>
          <vertical>
            <samples>1.5</samples>
            <resolution>1</resolution>
            <min_angle>-0.523598775598</min_angle>
            <max_angle> 0.523598775598</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.25</min>
          <max>1.5</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_br_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>base/relayboard_v2/usboard/sensor5</topicName>
        <frameId>sonar_br_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
</robot>

